server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: member-service
          uri: lb://member-service
          predicates:
            - Path=/api/members/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: memberServiceCircuitBreaker
                fallbackUri: forward:/fallback/member-service
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      memberServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        ignoreExceptions:
          - java.lang.StackOverflowError
  timelimiter:
    instances:
      memberServiceCircuitBreaker:
        timeoutDuration: 5s
        cancelRunningFuture: true

---
spring:
  config:
    activate:
      on-profile: docker
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

eureka:
  client:
    service-url:
      defaultZone: http://service-discovery:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
